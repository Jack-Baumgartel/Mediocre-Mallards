{"ast":null,"code":"var _jsxFileName = \"/Users/jack/react-nft-template/src/Mint.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { ethers } from \"ethers\";\nimport abi from \"./abi\";\nimport config from \"./config\";\nimport RubberBand from 'react-reveal/RubberBand';\nimport Reveal from './Reveal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  contractAddress,\n  requiredChainId\n} = config;\n\nconst Mint = props => {\n  _s();\n\n  const [web3, setWeb3] = useState();\n  const [user, setUser] = useState({});\n\n  const connect = async () => {\n    const {\n      chainId\n    } = user;\n    let ok = true;\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    }).catch(e => {\n      // oh no!\n      ok = false;\n    });\n\n    if (ok && chainId !== requiredChainId) {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: \"0x\" + requiredChainId.toString(16)\n        }]\n      }).catch(e => {\n        // oh no!\n        ok = false;\n      });\n\n      if (ok) {\n        console.log(\"Network Switched\");\n      }\n    }\n\n    if (!ok) {\n      alert(`Connect Failed!`);\n    }\n  };\n\n  const mint = async (quantity = 1) => {\n    const {\n      publicKey,\n      chainId,\n      wei\n    } = user;\n    let ok = true;\n\n    if (!publicKey) {\n      await window.ethereum.enable();\n      setTimeout(() => mint(quantity), 500);\n      return;\n    }\n\n    if (chainId !== requiredChainId) {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: \"0x\" + requiredChainId.toString(16)\n        }]\n      }).catch(e => {\n        // oh no!\n        ok = false;\n      });\n\n      if (ok) {\n        console.log(\"Network Switched\");\n      } else {\n        alert(\"Mint Failed!\");\n      }\n    }\n\n    const e18 = 1000000000000000000;\n    const balance = wei / e18;\n    const price = 0.01;\n    const gas = 0.0000000005;\n\n    if (balance < price * quantity + gas) {\n      alert(\"insufficient balance\");\n      return;\n    }\n\n    console.log('minting');\n    console.log(publicKey); // const nonce = await web3.eth.getTransactionCount(publicKey, 'latest')\n    // console.log(nonce)\n\n    const contract = new web3.eth.Contract(abi, contractAddress);\n    console.log(contract.methods); // return\n\n    const tx = {\n      from: publicKey,\n      to: contractAddress,\n      value: ethers.utils.parseEther(\"0.01\")['_hex'],\n      gas: ethers.utils.parseEther('' + gas)['_hex'],\n      data: contract.methods.safeMint(publicKey, 11, \"https://stage.shoot.to/maverick?nft=11\").encodeABI()\n    };\n    console.log(tx); // return\n\n    const txHash = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: [tx]\n    }).catch(e => {\n      console.log(\" :( \");\n    });\n\n    if (txHash) {\n      console.log(txHash);\n      console.log(\"You did it, baby!\");\n    }\n  }; // let updateUser = (data) =>\n\n\n  const userFromChain = chainId => {\n    web3.eth.getAccounts().then(accounts => {\n      if (accounts[0]) {\n        web3.eth.getBalance(accounts[0]).then(wei => {\n          setUser({\n            publicKey: accounts[0],\n            chainId,\n            wei\n          });\n        });\n      }\n    });\n  };\n\n  const handleAccountsChanged = accounts => {\n    if (accounts[0]) {\n      web3.eth.getChainId().then(userFromChain);\n    } else {\n      setUser({});\n    }\n\n    console.log(accounts);\n  };\n\n  useEffect(() => {\n    if (window.ethereum) {\n      if (web3) {\n        window.ethereum.on('accountsChanged', handleAccountsChanged);\n        window.ethereum.on('chainChanged', userFromChain);\n        web3.eth.getChainId().then(userFromChain);\n      } else {\n        setWeb3(new Web3(window.ethereum));\n      }\n    }\n\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        window.ethereum.removeListener('chainChanged', userFromChain);\n      }\n    }; // eslint-disable-next-line\n  }, [web3, user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white bg-cover text-black pb-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerr mx-10 mx-auto w-full pt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          name: \"Mint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Reveal, {\n          type: /*#__PURE__*/_jsxDEV(RubberBand, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 23\n          }, this),\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-hero bg-cover z-0 h-96 w-5/6 m-auto rounded my-3 text-black\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mx-10 p-5 pb-0 flex align-middle\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-7xl font-gloria align-middle\",\n                children: \"Mint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 76\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 82\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: connect,\n                className: \"px-4 py-2 shadow-2xl drop-shadow-2xl border-2 border-gray-900 bg-yellow-500 rounded ml-3\",\n                children: \"Connect Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: mint,\n                disabled: !web3,\n                className: \"px-4 py-2 shadow-2xl drop-shadow-2xl border-2 border-gray-900 bg-yellow-500 rounded ml-3\",\n                children: \"Mint Tokens\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Mint, \"35bSTliJSrgXcPHmyg0l+lQxs0U=\");\n\n_c = Mint;\nexport default Mint; // {\"hash\":\"0xe020381cbca960af566bb9f5298d82822ee4536e26f0d0f426bb525cac7d5ee9\",\"status\":\"OK\"}\n\nvar _c;\n\n$RefreshReg$(_c, \"Mint\");","map":{"version":3,"sources":["/Users/jack/react-nft-template/src/Mint.js"],"names":["React","useState","useEffect","Web3","ethers","abi","config","RubberBand","Reveal","contractAddress","requiredChainId","Mint","props","web3","setWeb3","user","setUser","connect","chainId","ok","window","ethereum","request","method","catch","e","params","toString","console","log","alert","mint","quantity","publicKey","wei","enable","setTimeout","e18","balance","price","gas","contract","eth","Contract","methods","tx","from","to","value","utils","parseEther","data","safeMint","encodeABI","txHash","userFromChain","getAccounts","then","accounts","getBalance","handleAccountsChanged","getChainId","on","removeListener"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport Web3 from \"web3\"\nimport { ethers } from \"ethers\"\nimport abi from \"./abi\"\nimport config from \"./config\"\nimport RubberBand from 'react-reveal/RubberBand';\nimport Reveal from './Reveal'\n\nconst { contractAddress, requiredChainId } = config\n\nconst Mint = (props) => {\n\n  const [web3, setWeb3] = useState()\n  const [user, setUser] = useState({})\n\n  const connect = async() => {\n    const { chainId } = user\n\n    let ok = true\n\n    await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    }).catch(e => {\n      // oh no!\n      ok = false\n    })\n\n    if (ok && chainId !== requiredChainId) {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: \"0x\" + requiredChainId.toString(16) }],\n      }).catch(e => {\n        // oh no!\n        ok = false\n      })\n\n      if (ok) {\n        console.log(\"Network Switched\")\n      }\n    }\n    if(!ok){\n      alert(`Connect Failed!`)\n    }\n  }\n\n  const mint = async (quantity = 1) => {\n    const { publicKey, chainId, wei } = user\n\n    let ok = true\n\n    if (!publicKey) {\n      await window.ethereum.enable()\n      setTimeout(() => mint(quantity), 500)\n      return\n    }\n\n    if (chainId !== requiredChainId) {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: \"0x\" + requiredChainId.toString(16) }],\n      }).catch(e => {\n        // oh no!\n        ok = false\n      })\n\n      if (ok) {\n        console.log(\"Network Switched\")\n      } else {\n        alert(\"Mint Failed!\")\n      }\n    }\n\n    const e18 = 1000000000000000000\n\n    const balance = wei / e18\n    const price = 0.01\n    const gas = 0.0000000005\n\n    if (balance < (price * quantity) + gas) {\n      alert(\"insufficient balance\")\n      return\n    }\n\n    console.log('minting')\n\n    console.log(publicKey)\n    // const nonce = await web3.eth.getTransactionCount(publicKey, 'latest')\n    // console.log(nonce)\n\n    const contract = new web3.eth.Contract(abi, contractAddress)\n    console.log(contract.methods)\n    // return\n    const tx = {\n      from: publicKey,\n      to: contractAddress,\n      value: ethers.utils.parseEther(\"0.01\")['_hex'],\n      gas: ethers.utils.parseEther('' + gas)['_hex'],\n      data: contract.methods.safeMint(publicKey, 11, \"https://stage.shoot.to/maverick?nft=11\").encodeABI()\n    }\n\n    console.log(tx)\n    // return\n    const txHash = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: [tx],\n    }).catch(e => {\n      console.log(\" :( \")\n    })\n    if (txHash) {\n      console.log(txHash)\n      console.log(\"You did it, baby!\")\n    }\n  }\n\n  // let updateUser = (data) =>\n\n  const userFromChain = chainId => {\n    web3.eth.getAccounts().then(accounts => {\n      if (accounts[0]) {\n        web3.eth.getBalance(accounts[0]).then(wei => {\n          setUser({ publicKey: accounts[0], chainId, wei })\n        })\n      }\n    })\n  }\n\n  const handleAccountsChanged = (accounts) => {\n    if(accounts[0]){\n      web3.eth.getChainId().then(userFromChain)\n    } else {\n      setUser({})\n    }\n\n    console.log(accounts)\n  }\n\n  useEffect(() => {\n\n\n    if (window.ethereum) {\n      if (web3) {\n        window.ethereum.on('accountsChanged', handleAccountsChanged);\n        window.ethereum.on('chainChanged', userFromChain)\n        web3.eth.getChainId().then(userFromChain)\n      } else {\n        setWeb3(new Web3(window.ethereum))\n      }\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        window.ethereum.removeListener('chainChanged', userFromChain);\n      }\n    }\n    // eslint-disable-next-line\n  }, [web3, user])\n\n  return <>\n    <div className=\"bg-white bg-cover text-black pb-10\">\n      <div className=\"containerr mx-10 mx-auto w-full pt-2\">\n        {/* eslint-disable-next-line */}\n        <a name=\"Mint\" />\n        <Reveal type={<RubberBand />} className=\"\">\n          <div className=\"bg-hero bg-cover z-0 h-96 w-5/6 m-auto rounded my-3 text-black\">\n            <div className=\"mx-10 p-5 pb-0 flex align-middle\">\n              <div className=\"text-7xl font-gloria align-middle\">Mint</div><br /><br />\n              <button onClick={connect} className=\"px-4 py-2 shadow-2xl drop-shadow-2xl border-2 border-gray-900 bg-yellow-500 rounded ml-3\">Connect Wallet</button>\n              <button onClick={mint} disabled={!web3} className=\"px-4 py-2 shadow-2xl drop-shadow-2xl border-2 border-gray-900 bg-yellow-500 rounded ml-3\">Mint Tokens</button>\n            </div>\n          </div>\n        </Reveal>\n      </div>\n    </div>\n\n  </>\n\n\n}\n\nexport default Mint\n\n// {\"hash\":\"0xe020381cbca960af566bb9f5298d82822ee4536e26f0d0f426bb525cac7d5ee9\",\"status\":\"OK\"}"]},"metadata":{},"sourceType":"module"}