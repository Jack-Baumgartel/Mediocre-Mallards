{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jack/Mediocre-Mallards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jack/Mediocre-Mallards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/jack/Mediocre-Mallards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Web3 from\"web3\";import{ethers}from\"ethers\";import abi from\"./abi\";import config from\"./config\";import RubberBand from'react-reveal/RubberBand';import Reveal from'./Reveal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var contractAddress=config.contractAddress,requiredChainId=config.requiredChainId;var Mint=function Mint(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),web3=_useState2[0],setWeb3=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),user=_useState4[0],setUser=_useState4[1];var connect=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var chainId,ok;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:chainId=user.chainId;ok=true;_context.next=4;return window.ethereum.request({method:'eth_requestAccounts'}).catch(function(e){// oh no!\nok=false;});case 4:if(!(ok&&chainId!==requiredChainId)){_context.next=8;break;}_context.next=7;return window.ethereum.request({method:'wallet_switchEthereumChain',params:[{chainId:\"0x\"+requiredChainId.toString(16)}]}).catch(function(e){// oh no!\nok=false;});case 7:if(ok){console.log(\"Network Switched\");}case 8:if(!ok){alert(\"Connect Failed!\");}case 9:case\"end\":return _context.stop();}}},_callee);}));return function connect(){return _ref.apply(this,arguments);};}();var mint=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var quantity,publicKey,chainId,wei,ok,e18,balance,price,gas,contract,tx,txHash,_args2=arguments;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:quantity=_args2.length>0&&_args2[0]!==undefined?_args2[0]:1;publicKey=user.publicKey,chainId=user.chainId,wei=user.wei;ok=true;if(publicKey){_context2.next=8;break;}_context2.next=6;return window.ethereum.enable();case 6:setTimeout(function(){return mint(quantity);},500);return _context2.abrupt(\"return\");case 8:if(!(chainId!==requiredChainId)){_context2.next=12;break;}_context2.next=11;return window.ethereum.request({method:'wallet_switchEthereumChain',params:[{chainId:\"0x\"+requiredChainId.toString(16)}]}).catch(function(e){// oh no!\nok=false;});case 11:if(ok){console.log(\"Network Switched\");}else{alert(\"Mint Failed!\");}case 12:e18=1000000000000000000;balance=wei/e18;price=0.05;gas=0.0000000005;if(!(balance<price*quantity+gas)){_context2.next=19;break;}alert(\"insufficient balance\");return _context2.abrupt(\"return\");case 19:console.log('minting');console.log(publicKey);// const nonce = await web3.eth.getTransactionCount(publicKey, 'latest')\n// console.log(nonce)\ncontract=new web3.eth.Contract(abi,contractAddress);console.log(contract.methods);// return\ntx={from:publicKey,to:contractAddress,value:ethers.utils.parseEther(\"0.01\")['_hex'],gas:ethers.utils.parseEther(''+gas)['_hex'],data:contract.methods.safeMint(publicKey,11,\"https://stage.shoot.to/maverick?nft=11\").encodeABI()};console.log(tx);// return\n_context2.next=27;return window.ethereum.request({method:'eth_sendTransaction',params:[tx]}).catch(function(e){console.log(\" :( \");});case 27:txHash=_context2.sent;if(txHash){console.log(txHash);console.log(\"You did it, baby!\");}case 29:case\"end\":return _context2.stop();}}},_callee2);}));return function mint(){return _ref2.apply(this,arguments);};}();// let updateUser = (data) =>\nvar userFromChain=function userFromChain(chainId){web3.eth.getAccounts().then(function(accounts){if(accounts[0]){web3.eth.getBalance(accounts[0]).then(function(wei){setUser({publicKey:accounts[0],chainId:chainId,wei:wei});});}});};var handleAccountsChanged=function handleAccountsChanged(accounts){if(accounts[0]){web3.eth.getChainId().then(userFromChain);}else{setUser({});}console.log(accounts);};useEffect(function(){if(window.ethereum){if(web3){window.ethereum.on('accountsChanged',handleAccountsChanged);window.ethereum.on('chainChanged',userFromChain);web3.eth.getChainId().then(userFromChain);}else{setWeb3(new Web3(window.ethereum));}}return function(){if(window.ethereum){window.ethereum.removeListener('accountsChanged',handleAccountsChanged);window.ethereum.removeListener('chainChanged',userFromChain);}};// eslint-disable-next-line\n},[web3,user]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"a\",{name:\"Mint\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white bg-cover text-black pb-5\",children:/*#__PURE__*/_jsx(\"div\",{className:\"containerr mx-auto w-full \",children:/*#__PURE__*/_jsx(Reveal,{type:/*#__PURE__*/_jsx(RubberBand,{}),className:\"\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-hero bg-cover z-0 h-70 w-5/6 m-auto rounded my-3 text-black\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"containerr text-black font-gloria text-6xl rounded pb-12 pt-3\",children:\"Minting!\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-3 shadow-2xl drop-shadow-2xl border-2 border-gray-900 bg-blue-200 rounded ml-3 font-gloria m-2\",children:\"Connect Wallet\"}),/*#__PURE__*/_jsx(\"button\",{disabled:!web3,className:\"px-4 py-3 shadow-2xl drop-shadow-2xl border-2 border-gray-900 bg-blue-200 rounded ml-3 font-gloria m-2\",children:\"Mint a Mallard!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"containerr text-black font-gloria text-xl rounded pb-12 pt-5\",children:\"( It's not quite time to migrate yet! )\"})]})})})})]});};export default Mint;// {\"hash\":\"0xe020381cbca960af566bb9f5298d82822ee4536e26f0d0f426bb525cac7d5ee9\",\"status\":\"OK\"}","map":{"version":3,"sources":["/Users/jack/Mediocre-Mallards/src/Mint.js"],"names":["React","useState","useEffect","Web3","ethers","abi","config","RubberBand","Reveal","contractAddress","requiredChainId","Mint","props","web3","setWeb3","user","setUser","connect","chainId","ok","window","ethereum","request","method","catch","e","params","toString","console","log","alert","mint","quantity","publicKey","wei","enable","setTimeout","e18","balance","price","gas","contract","eth","Contract","methods","tx","from","to","value","utils","parseEther","data","safeMint","encodeABI","txHash","userFromChain","getAccounts","then","accounts","getBalance","handleAccountsChanged","getChainId","on","removeListener"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport Web3 from \"web3\"\nimport { ethers } from \"ethers\"\nimport abi from \"./abi\"\nimport config from \"./config\"\nimport RubberBand from 'react-reveal/RubberBand';\nimport Reveal from './Reveal'\n\nconst { contractAddress, requiredChainId } = config\n\nconst Mint = (props) => {\n\n  const [web3, setWeb3] = useState()\n  const [user, setUser] = useState({})\n\n  const connect = async() => {\n    const { chainId } = user\n\n    let ok = true\n\n    await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    }).catch(e => {\n      // oh no!\n      ok = false\n    })\n\n    if (ok && chainId !== requiredChainId) {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: \"0x\" + requiredChainId.toString(16) }],\n      }).catch(e => {\n        // oh no!\n        ok = false\n      })\n\n      if (ok) {\n        console.log(\"Network Switched\")\n      }\n    }\n    if(!ok){\n      alert(`Connect Failed!`)\n    }\n  }\n\n  const mint = async (quantity = 1) => {\n    const { publicKey, chainId, wei } = user\n\n    let ok = true\n\n    if (!publicKey) {\n      await window.ethereum.enable()\n      setTimeout(() => mint(quantity), 500)\n      return\n    }\n\n    if (chainId !== requiredChainId) {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: \"0x\" + requiredChainId.toString(16) }],\n      }).catch(e => {\n        // oh no!\n        ok = false\n      })\n\n      if (ok) {\n        console.log(\"Network Switched\")\n      } else {\n        alert(\"Mint Failed!\")\n      }\n    }\n\n    const e18 = 1000000000000000000\n\n    const balance = wei / e18\n    const price = 0.05\n    const gas = 0.0000000005\n\n    if (balance < (price * quantity) + gas) {\n      alert(\"insufficient balance\")\n      return\n    }\n\n    console.log('minting')\n\n    console.log(publicKey)\n    // const nonce = await web3.eth.getTransactionCount(publicKey, 'latest')\n    // console.log(nonce)\n\n    const contract = new web3.eth.Contract(abi, contractAddress)\n    console.log(contract.methods)\n    // return\n    const tx = {\n      from: publicKey,\n      to: contractAddress,\n      value: ethers.utils.parseEther(\"0.01\")['_hex'],\n      gas: ethers.utils.parseEther('' + gas)['_hex'],\n      data: contract.methods.safeMint(publicKey, 11, \"https://stage.shoot.to/maverick?nft=11\").encodeABI()\n    }\n\n    console.log(tx)\n    // return\n    const txHash = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: [tx],\n    }).catch(e => {\n      console.log(\" :( \")\n    })\n    if (txHash) {\n      console.log(txHash)\n      console.log(\"You did it, baby!\")\n    }\n  }\n\n  // let updateUser = (data) =>\n\n  const userFromChain = chainId => {\n    web3.eth.getAccounts().then(accounts => {\n      if (accounts[0]) {\n        web3.eth.getBalance(accounts[0]).then(wei => {\n          setUser({ publicKey: accounts[0], chainId, wei })\n        })\n      }\n    })\n  }\n\n  const handleAccountsChanged = (accounts) => {\n    if(accounts[0]){\n      web3.eth.getChainId().then(userFromChain)\n    } else {\n      setUser({})\n    }\n\n    console.log(accounts)\n  }\n\n  useEffect(() => {\n\n\n    if (window.ethereum) {\n      if (web3) {\n        window.ethereum.on('accountsChanged', handleAccountsChanged);\n        window.ethereum.on('chainChanged', userFromChain)\n        web3.eth.getChainId().then(userFromChain)\n      } else {\n        setWeb3(new Web3(window.ethereum))\n      }\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        window.ethereum.removeListener('chainChanged', userFromChain);\n      }\n    }\n    // eslint-disable-next-line\n  }, [web3, user])\n\n  return <>\n    <a name=\"Mint\" />\n    <div className=\"bg-white bg-cover text-black pb-5\">\n      <div className=\"containerr mx-auto w-full \">\n        {/* eslint-disable-next-line */}\n        \n        <Reveal type={<RubberBand />} className=\"\">\n          <div className=\"bg-hero bg-cover z-0 h-70 w-5/6 m-auto rounded my-3 text-black\">\n          <div className=\"containerr text-black font-gloria text-6xl rounded pb-12 pt-3\">Minting!</div>\n              <button className=\"px-4 py-3 shadow-2xl drop-shadow-2xl border-2 border-gray-900 bg-blue-200 rounded ml-3 font-gloria m-2\">Connect Wallet</button>\n              <button disabled={!web3} className=\"px-4 py-3 shadow-2xl drop-shadow-2xl border-2 border-gray-900 bg-blue-200 rounded ml-3 font-gloria m-2\">Mint a Mallard!</button>\n              <div className=\"containerr text-black font-gloria text-xl rounded pb-12 pt-5\">( It's not quite time to migrate yet! )</div>\n          </div>\n        </Reveal>\n      </div>\n    </div>\n  </>\n\n\n}\n\nexport default Mint\n\n// {\"hash\":\"0xe020381cbca960af566bb9f5298d82822ee4536e26f0d0f426bb525cac7d5ee9\",\"status\":\"OK\"}"]},"metadata":{},"sourceType":"module"}